|top
CLOCK_50 => CLOCK_50.IN1
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => SW[2].IN1
SW[3] => SW[3].IN1
SW[4] => SW[4].IN1
SW[5] => SW[5].IN1
SW[6] => SW[6].IN1
SW[7] => SW[7].IN1
SW[8] => SW[8].IN1
SW[9] => _.IN1
KEY[0] => _.IN1
KEY[1] => _.IN1
KEY[2] => _.IN1
KEY[3] => _.IN1
LEDR[0] << soc:system_on_chip.gpo
LEDR[1] << soc:system_on_chip.gpo
LEDR[2] << soc:system_on_chip.gpo
LEDR[3] << soc:system_on_chip.gpo
LEDR[4] << soc:system_on_chip.gpo
LEDR[5] << soc:system_on_chip.gpo
LEDR[6] << soc:system_on_chip.debug
LEDR[7] << soc:system_on_chip.debug
LEDR[8] << soc:system_on_chip.debug
LEDR[9] << soc:system_on_chip.debug
HEX0[0] << disp_decimal:dec.disp_dec0
HEX0[1] << disp_decimal:dec.disp_dec0
HEX0[2] << disp_decimal:dec.disp_dec0
HEX0[3] << disp_decimal:dec.disp_dec0
HEX0[4] << disp_decimal:dec.disp_dec0
HEX0[5] << disp_decimal:dec.disp_dec0
HEX0[6] << disp_decimal:dec.disp_dec0
HEX1[0] << disp_decimal:dec.disp_dec1
HEX1[1] << disp_decimal:dec.disp_dec1
HEX1[2] << disp_decimal:dec.disp_dec1
HEX1[3] << disp_decimal:dec.disp_dec1
HEX1[4] << disp_decimal:dec.disp_dec1
HEX1[5] << disp_decimal:dec.disp_dec1
HEX1[6] << disp_decimal:dec.disp_dec1
HEX2[0] << disp_decimal:dec.disp_dec2
HEX2[1] << disp_decimal:dec.disp_dec2
HEX2[2] << disp_decimal:dec.disp_dec2
HEX2[3] << disp_decimal:dec.disp_dec2
HEX2[4] << disp_decimal:dec.disp_dec2
HEX2[5] << disp_decimal:dec.disp_dec2
HEX2[6] << disp_decimal:dec.disp_dec2
HEX3[0] << disp_decimal:dec.disp_dec3
HEX3[1] << disp_decimal:dec.disp_dec3
HEX3[2] << disp_decimal:dec.disp_dec3
HEX3[3] << disp_decimal:dec.disp_dec3
HEX3[4] << disp_decimal:dec.disp_dec3
HEX3[5] << disp_decimal:dec.disp_dec3
HEX3[6] << disp_decimal:dec.disp_dec3
HEX4[0] << disp_hex:hex.disp_hex0
HEX4[1] << disp_hex:hex.disp_hex0
HEX4[2] << disp_hex:hex.disp_hex0
HEX4[3] << disp_hex:hex.disp_hex0
HEX4[4] << disp_hex:hex.disp_hex0
HEX4[5] << disp_hex:hex.disp_hex0
HEX4[6] << disp_hex:hex.disp_hex0
HEX5[0] << disp_hex:hex.disp_hex1
HEX5[1] << disp_hex:hex.disp_hex1
HEX5[2] << disp_hex:hex.disp_hex1
HEX5[3] << disp_hex:hex.disp_hex1
HEX5[4] << disp_hex:hex.disp_hex1
HEX5[5] << disp_hex:hex.disp_hex1
HEX5[6] << disp_hex:hex.disp_hex1


|top|soc:system_on_chip
clk => clk.IN20
resetn => resetn.IN1
turbo_mode => turbo_mode.IN1
gpi[0] => gpi[0].IN1
gpi[1] => gpi[1].IN1
gpi[2] => gpi[2].IN1
gpi[3] => gpi[3].IN1
gpo[0] <= cpu:core.reg_gout
gpo[1] <= cpu:core.reg_gout
gpo[2] <= cpu:core.reg_gout
gpo[3] <= cpu:core.reg_gout
gpo[4] <= cpu:core.reg_gout
gpo[5] <= cpu:core.reg_gout
din[0] => din[0].IN1
din[1] => din[1].IN1
din[2] => din[2].IN1
din[3] => din[3].IN1
din[4] => din[4].IN1
din[5] => din[5].IN1
din[6] => din[6].IN1
din[7] => din[7].IN1
dout[0] <= cpu:core.reg_dout
dout[1] <= cpu:core.reg_dout
dout[2] <= cpu:core.reg_dout
dout[3] <= cpu:core.reg_dout
dout[4] <= cpu:core.reg_dout
dout[5] <= cpu:core.reg_dout
dout[6] <= cpu:core.reg_dout
dout[7] <= cpu:core.reg_dout
dval <= cpu:core.reg_gout
debug[0] <= gpi_hold.DB_MAX_OUTPUT_PORT_TYPE
debug[1] <= cpu:core.reg_flag
debug[2] <= cpu:core.reg_flag
debug[3] <= enabler.DB_MAX_OUTPUT_PORT_TYPE
ip[0] <= ip[0].DB_MAX_OUTPUT_PORT_TYPE
ip[1] <= ip[1].DB_MAX_OUTPUT_PORT_TYPE
ip[2] <= ip[2].DB_MAX_OUTPUT_PORT_TYPE
ip[3] <= ip[3].DB_MAX_OUTPUT_PORT_TYPE
ip[4] <= ip[4].DB_MAX_OUTPUT_PORT_TYPE
ip[5] <= ip[5].DB_MAX_OUTPUT_PORT_TYPE
ip[6] <= ip[6].DB_MAX_OUTPUT_PORT_TYPE
ip[7] <= ip[7].DB_MAX_OUTPUT_PORT_TYPE
non_signed <= non_signed.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|synchroniser:SW_loop[0].sync_SW
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|synchroniser:SW_loop[1].sync_SW
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|synchroniser:SW_loop[2].sync_SW
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|synchroniser:SW_loop[3].sync_SW
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|synchroniser:SW_loop[4].sync_SW
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|synchroniser:SW_loop[5].sync_SW
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|synchroniser:SW_loop[6].sync_SW
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|synchroniser:SW_loop[7].sync_SW
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|debounce:deb_reset
clk => clk.IN2
enable => enable.IN1
resetn => resetn.IN1
sig_i => sig_i.IN1
sig_o <= sig_o.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|debounce:deb_reset|synchroniser:sync
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|debounce:deb_reset|timer:timer_inst
clk => clk.IN1
enable => enable.IN1
resetn => resetn.IN1
sync_resetn => sync_resetn.IN1
start => start.IN1
done <= timer_base:timer_inst.done


|top|soc:system_on_chip|debounce:deb_reset|timer:timer_inst|timer_base:timer_inst
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => state~3.DATAIN
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => count[0].ENA
enable => count[21].ENA
enable => count[20].ENA
enable => count[19].ENA
enable => count[18].ENA
enable => count[17].ENA
enable => count[16].ENA
enable => count[15].ENA
enable => count[14].ENA
enable => count[13].ENA
enable => count[12].ENA
enable => count[11].ENA
enable => count[10].ENA
enable => count[9].ENA
enable => count[8].ENA
enable => count[7].ENA
enable => count[6].ENA
enable => count[5].ENA
enable => count[4].ENA
enable => count[3].ENA
enable => count[2].ENA
enable => count[1].ENA
resetn => count[0].PRESET
resetn => count[1].ACLR
resetn => count[2].ACLR
resetn => count[3].ACLR
resetn => count[4].ACLR
resetn => count[5].PRESET
resetn => count[6].PRESET
resetn => count[7].ACLR
resetn => count[8].PRESET
resetn => count[9].PRESET
resetn => count[10].ACLR
resetn => count[11].ACLR
resetn => count[12].ACLR
resetn => count[13].PRESET
resetn => count[14].PRESET
resetn => count[15].PRESET
resetn => count[16].ACLR
resetn => count[17].PRESET
resetn => count[18].PRESET
resetn => count[19].ACLR
resetn => count[20].PRESET
resetn => count[21].ACLR
resetn => state~5.DATAIN
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
start => Selector1.IN1
start => Selector0.IN1
done <= done.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|debounce:deb_turb
clk => clk.IN2
enable => enable.IN1
resetn => resetn.IN1
sig_i => sig_i.IN1
sig_o <= sig_o.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|debounce:deb_turb|synchroniser:sync
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|debounce:deb_turb|timer:timer_inst
clk => clk.IN1
enable => enable.IN1
resetn => resetn.IN1
sync_resetn => sync_resetn.IN1
start => start.IN1
done <= timer_base:timer_inst.done


|top|soc:system_on_chip|debounce:deb_turb|timer:timer_inst|timer_base:timer_inst
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => state~3.DATAIN
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => count[0].ENA
enable => count[21].ENA
enable => count[20].ENA
enable => count[19].ENA
enable => count[18].ENA
enable => count[17].ENA
enable => count[16].ENA
enable => count[15].ENA
enable => count[14].ENA
enable => count[13].ENA
enable => count[12].ENA
enable => count[11].ENA
enable => count[10].ENA
enable => count[9].ENA
enable => count[8].ENA
enable => count[7].ENA
enable => count[6].ENA
enable => count[5].ENA
enable => count[4].ENA
enable => count[3].ENA
enable => count[2].ENA
enable => count[1].ENA
resetn => count[0].PRESET
resetn => count[1].ACLR
resetn => count[2].ACLR
resetn => count[3].ACLR
resetn => count[4].ACLR
resetn => count[5].PRESET
resetn => count[6].PRESET
resetn => count[7].ACLR
resetn => count[8].PRESET
resetn => count[9].PRESET
resetn => count[10].ACLR
resetn => count[11].ACLR
resetn => count[12].ACLR
resetn => count[13].PRESET
resetn => count[14].PRESET
resetn => count[15].PRESET
resetn => count[16].ACLR
resetn => count[17].PRESET
resetn => count[18].PRESET
resetn => count[19].ACLR
resetn => count[20].PRESET
resetn => count[21].ACLR
resetn => state~5.DATAIN
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
start => Selector1.IN1
start => Selector0.IN1
done <= done.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|synchroniser:KEY_loop[0].sync_KEY
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[0].fall
clk => clk.IN2
in => in.IN1
out_press <= out_press.DB_MAX_OUTPUT_PORT_TYPE
hold_indicator <= hold_sig.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[0].fall|debounce:deb
clk => clk.IN2
enable => enable.IN1
resetn => resetn.IN1
sig_i => sig_i.IN1
sig_o <= sig_o.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[0].fall|debounce:deb|synchroniser:sync
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[0].fall|debounce:deb|timer:timer_inst
clk => clk.IN1
enable => enable.IN1
resetn => resetn.IN1
sync_resetn => sync_resetn.IN1
start => start.IN1
done <= timer_base:timer_inst.done


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[0].fall|debounce:deb|timer:timer_inst|timer_base:timer_inst
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => state~3.DATAIN
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => count[0].ENA
enable => count[21].ENA
enable => count[20].ENA
enable => count[19].ENA
enable => count[18].ENA
enable => count[17].ENA
enable => count[16].ENA
enable => count[15].ENA
enable => count[14].ENA
enable => count[13].ENA
enable => count[12].ENA
enable => count[11].ENA
enable => count[10].ENA
enable => count[9].ENA
enable => count[8].ENA
enable => count[7].ENA
enable => count[6].ENA
enable => count[5].ENA
enable => count[4].ENA
enable => count[3].ENA
enable => count[2].ENA
enable => count[1].ENA
resetn => count[0].PRESET
resetn => count[1].ACLR
resetn => count[2].ACLR
resetn => count[3].ACLR
resetn => count[4].ACLR
resetn => count[5].PRESET
resetn => count[6].PRESET
resetn => count[7].ACLR
resetn => count[8].PRESET
resetn => count[9].PRESET
resetn => count[10].ACLR
resetn => count[11].ACLR
resetn => count[12].ACLR
resetn => count[13].PRESET
resetn => count[14].PRESET
resetn => count[15].PRESET
resetn => count[16].ACLR
resetn => count[17].PRESET
resetn => count[18].PRESET
resetn => count[19].ACLR
resetn => count[20].PRESET
resetn => count[21].ACLR
resetn => state~5.DATAIN
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
start => Selector1.IN1
start => Selector0.IN1
done <= done.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[0].fall|timer:timer_hold
clk => clk.IN1
enable => enable.IN1
resetn => resetn.IN1
sync_resetn => sync_resetn.IN1
start => start.IN1
done <= timer_base:timer_inst.done


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[0].fall|timer:timer_hold|timer_base:timer_inst
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => state~3.DATAIN
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => count[0].ENA
enable => count[27].ENA
enable => count[26].ENA
enable => count[25].ENA
enable => count[24].ENA
enable => count[23].ENA
enable => count[22].ENA
enable => count[21].ENA
enable => count[20].ENA
enable => count[19].ENA
enable => count[18].ENA
enable => count[17].ENA
enable => count[16].ENA
enable => count[15].ENA
enable => count[14].ENA
enable => count[13].ENA
enable => count[12].ENA
enable => count[11].ENA
enable => count[10].ENA
enable => count[9].ENA
enable => count[8].ENA
enable => count[7].ENA
enable => count[6].ENA
enable => count[5].ENA
enable => count[4].ENA
enable => count[3].ENA
enable => count[2].ENA
enable => count[1].ENA
resetn => count[0].ACLR
resetn => count[1].ACLR
resetn => count[2].ACLR
resetn => count[3].ACLR
resetn => count[4].ACLR
resetn => count[5].ACLR
resetn => count[6].PRESET
resetn => count[7].PRESET
resetn => count[8].ACLR
resetn => count[9].ACLR
resetn => count[10].ACLR
resetn => count[11].PRESET
resetn => count[12].ACLR
resetn => count[13].PRESET
resetn => count[14].PRESET
resetn => count[15].ACLR
resetn => count[16].ACLR
resetn => count[17].ACLR
resetn => count[18].ACLR
resetn => count[19].PRESET
resetn => count[20].PRESET
resetn => count[21].PRESET
resetn => count[22].PRESET
resetn => count[23].ACLR
resetn => count[24].ACLR
resetn => count[25].ACLR
resetn => count[26].PRESET
resetn => count[27].ACLR
resetn => state~5.DATAIN
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
start => Selector1.IN1
start => Selector0.IN1
done <= done.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|synchroniser:KEY_loop[1].sync_KEY
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[1].fall
clk => clk.IN2
in => in.IN1
out_press <= out_press.DB_MAX_OUTPUT_PORT_TYPE
hold_indicator <= hold_sig.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[1].fall|debounce:deb
clk => clk.IN2
enable => enable.IN1
resetn => resetn.IN1
sig_i => sig_i.IN1
sig_o <= sig_o.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[1].fall|debounce:deb|synchroniser:sync
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[1].fall|debounce:deb|timer:timer_inst
clk => clk.IN1
enable => enable.IN1
resetn => resetn.IN1
sync_resetn => sync_resetn.IN1
start => start.IN1
done <= timer_base:timer_inst.done


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[1].fall|debounce:deb|timer:timer_inst|timer_base:timer_inst
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => state~3.DATAIN
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => count[0].ENA
enable => count[21].ENA
enable => count[20].ENA
enable => count[19].ENA
enable => count[18].ENA
enable => count[17].ENA
enable => count[16].ENA
enable => count[15].ENA
enable => count[14].ENA
enable => count[13].ENA
enable => count[12].ENA
enable => count[11].ENA
enable => count[10].ENA
enable => count[9].ENA
enable => count[8].ENA
enable => count[7].ENA
enable => count[6].ENA
enable => count[5].ENA
enable => count[4].ENA
enable => count[3].ENA
enable => count[2].ENA
enable => count[1].ENA
resetn => count[0].PRESET
resetn => count[1].ACLR
resetn => count[2].ACLR
resetn => count[3].ACLR
resetn => count[4].ACLR
resetn => count[5].PRESET
resetn => count[6].PRESET
resetn => count[7].ACLR
resetn => count[8].PRESET
resetn => count[9].PRESET
resetn => count[10].ACLR
resetn => count[11].ACLR
resetn => count[12].ACLR
resetn => count[13].PRESET
resetn => count[14].PRESET
resetn => count[15].PRESET
resetn => count[16].ACLR
resetn => count[17].PRESET
resetn => count[18].PRESET
resetn => count[19].ACLR
resetn => count[20].PRESET
resetn => count[21].ACLR
resetn => state~5.DATAIN
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
start => Selector1.IN1
start => Selector0.IN1
done <= done.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[1].fall|timer:timer_hold
clk => clk.IN1
enable => enable.IN1
resetn => resetn.IN1
sync_resetn => sync_resetn.IN1
start => start.IN1
done <= timer_base:timer_inst.done


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[1].fall|timer:timer_hold|timer_base:timer_inst
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => state~3.DATAIN
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => count[0].ENA
enable => count[27].ENA
enable => count[26].ENA
enable => count[25].ENA
enable => count[24].ENA
enable => count[23].ENA
enable => count[22].ENA
enable => count[21].ENA
enable => count[20].ENA
enable => count[19].ENA
enable => count[18].ENA
enable => count[17].ENA
enable => count[16].ENA
enable => count[15].ENA
enable => count[14].ENA
enable => count[13].ENA
enable => count[12].ENA
enable => count[11].ENA
enable => count[10].ENA
enable => count[9].ENA
enable => count[8].ENA
enable => count[7].ENA
enable => count[6].ENA
enable => count[5].ENA
enable => count[4].ENA
enable => count[3].ENA
enable => count[2].ENA
enable => count[1].ENA
resetn => count[0].ACLR
resetn => count[1].ACLR
resetn => count[2].ACLR
resetn => count[3].ACLR
resetn => count[4].ACLR
resetn => count[5].ACLR
resetn => count[6].PRESET
resetn => count[7].PRESET
resetn => count[8].ACLR
resetn => count[9].ACLR
resetn => count[10].ACLR
resetn => count[11].PRESET
resetn => count[12].ACLR
resetn => count[13].PRESET
resetn => count[14].PRESET
resetn => count[15].ACLR
resetn => count[16].ACLR
resetn => count[17].ACLR
resetn => count[18].ACLR
resetn => count[19].PRESET
resetn => count[20].PRESET
resetn => count[21].PRESET
resetn => count[22].PRESET
resetn => count[23].ACLR
resetn => count[24].ACLR
resetn => count[25].ACLR
resetn => count[26].PRESET
resetn => count[27].ACLR
resetn => state~5.DATAIN
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
start => Selector1.IN1
start => Selector0.IN1
done <= done.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|synchroniser:KEY_loop[2].sync_KEY
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[2].fall
clk => clk.IN2
in => in.IN1
out_press <= out_press.DB_MAX_OUTPUT_PORT_TYPE
hold_indicator <= hold_sig.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[2].fall|debounce:deb
clk => clk.IN2
enable => enable.IN1
resetn => resetn.IN1
sig_i => sig_i.IN1
sig_o <= sig_o.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[2].fall|debounce:deb|synchroniser:sync
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[2].fall|debounce:deb|timer:timer_inst
clk => clk.IN1
enable => enable.IN1
resetn => resetn.IN1
sync_resetn => sync_resetn.IN1
start => start.IN1
done <= timer_base:timer_inst.done


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[2].fall|debounce:deb|timer:timer_inst|timer_base:timer_inst
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => state~3.DATAIN
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => count[0].ENA
enable => count[21].ENA
enable => count[20].ENA
enable => count[19].ENA
enable => count[18].ENA
enable => count[17].ENA
enable => count[16].ENA
enable => count[15].ENA
enable => count[14].ENA
enable => count[13].ENA
enable => count[12].ENA
enable => count[11].ENA
enable => count[10].ENA
enable => count[9].ENA
enable => count[8].ENA
enable => count[7].ENA
enable => count[6].ENA
enable => count[5].ENA
enable => count[4].ENA
enable => count[3].ENA
enable => count[2].ENA
enable => count[1].ENA
resetn => count[0].PRESET
resetn => count[1].ACLR
resetn => count[2].ACLR
resetn => count[3].ACLR
resetn => count[4].ACLR
resetn => count[5].PRESET
resetn => count[6].PRESET
resetn => count[7].ACLR
resetn => count[8].PRESET
resetn => count[9].PRESET
resetn => count[10].ACLR
resetn => count[11].ACLR
resetn => count[12].ACLR
resetn => count[13].PRESET
resetn => count[14].PRESET
resetn => count[15].PRESET
resetn => count[16].ACLR
resetn => count[17].PRESET
resetn => count[18].PRESET
resetn => count[19].ACLR
resetn => count[20].PRESET
resetn => count[21].ACLR
resetn => state~5.DATAIN
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
start => Selector1.IN1
start => Selector0.IN1
done <= done.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[2].fall|timer:timer_hold
clk => clk.IN1
enable => enable.IN1
resetn => resetn.IN1
sync_resetn => sync_resetn.IN1
start => start.IN1
done <= timer_base:timer_inst.done


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[2].fall|timer:timer_hold|timer_base:timer_inst
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => state~3.DATAIN
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => count[0].ENA
enable => count[27].ENA
enable => count[26].ENA
enable => count[25].ENA
enable => count[24].ENA
enable => count[23].ENA
enable => count[22].ENA
enable => count[21].ENA
enable => count[20].ENA
enable => count[19].ENA
enable => count[18].ENA
enable => count[17].ENA
enable => count[16].ENA
enable => count[15].ENA
enable => count[14].ENA
enable => count[13].ENA
enable => count[12].ENA
enable => count[11].ENA
enable => count[10].ENA
enable => count[9].ENA
enable => count[8].ENA
enable => count[7].ENA
enable => count[6].ENA
enable => count[5].ENA
enable => count[4].ENA
enable => count[3].ENA
enable => count[2].ENA
enable => count[1].ENA
resetn => count[0].ACLR
resetn => count[1].ACLR
resetn => count[2].ACLR
resetn => count[3].ACLR
resetn => count[4].ACLR
resetn => count[5].ACLR
resetn => count[6].PRESET
resetn => count[7].PRESET
resetn => count[8].ACLR
resetn => count[9].ACLR
resetn => count[10].ACLR
resetn => count[11].PRESET
resetn => count[12].ACLR
resetn => count[13].PRESET
resetn => count[14].PRESET
resetn => count[15].ACLR
resetn => count[16].ACLR
resetn => count[17].ACLR
resetn => count[18].ACLR
resetn => count[19].PRESET
resetn => count[20].PRESET
resetn => count[21].PRESET
resetn => count[22].PRESET
resetn => count[23].ACLR
resetn => count[24].ACLR
resetn => count[25].ACLR
resetn => count[26].PRESET
resetn => count[27].ACLR
resetn => state~5.DATAIN
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
start => Selector1.IN1
start => Selector0.IN1
done <= done.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|synchroniser:KEY_loop[3].sync_KEY
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[3].fall
clk => clk.IN2
in => in.IN1
out_press <= out_press.DB_MAX_OUTPUT_PORT_TYPE
hold_indicator <= hold_sig.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[3].fall|debounce:deb
clk => clk.IN2
enable => enable.IN1
resetn => resetn.IN1
sig_i => sig_i.IN1
sig_o <= sig_o.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[3].fall|debounce:deb|synchroniser:sync
clk => sync_data~reg0.CLK
clk => half_sync_data.CLK
in_data => half_sync_data.DATAIN
sync_data <= sync_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[3].fall|debounce:deb|timer:timer_inst
clk => clk.IN1
enable => enable.IN1
resetn => resetn.IN1
sync_resetn => sync_resetn.IN1
start => start.IN1
done <= timer_base:timer_inst.done


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[3].fall|debounce:deb|timer:timer_inst|timer_base:timer_inst
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => state~3.DATAIN
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => count[0].ENA
enable => count[21].ENA
enable => count[20].ENA
enable => count[19].ENA
enable => count[18].ENA
enable => count[17].ENA
enable => count[16].ENA
enable => count[15].ENA
enable => count[14].ENA
enable => count[13].ENA
enable => count[12].ENA
enable => count[11].ENA
enable => count[10].ENA
enable => count[9].ENA
enable => count[8].ENA
enable => count[7].ENA
enable => count[6].ENA
enable => count[5].ENA
enable => count[4].ENA
enable => count[3].ENA
enable => count[2].ENA
enable => count[1].ENA
resetn => count[0].PRESET
resetn => count[1].ACLR
resetn => count[2].ACLR
resetn => count[3].ACLR
resetn => count[4].ACLR
resetn => count[5].PRESET
resetn => count[6].PRESET
resetn => count[7].ACLR
resetn => count[8].PRESET
resetn => count[9].PRESET
resetn => count[10].ACLR
resetn => count[11].ACLR
resetn => count[12].ACLR
resetn => count[13].PRESET
resetn => count[14].PRESET
resetn => count[15].PRESET
resetn => count[16].ACLR
resetn => count[17].PRESET
resetn => count[18].PRESET
resetn => count[19].ACLR
resetn => count[20].PRESET
resetn => count[21].ACLR
resetn => state~5.DATAIN
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
start => Selector1.IN1
start => Selector0.IN1
done <= done.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[3].fall|timer:timer_hold
clk => clk.IN1
enable => enable.IN1
resetn => resetn.IN1
sync_resetn => sync_resetn.IN1
start => start.IN1
done <= timer_base:timer_inst.done


|top|soc:system_on_chip|falling_edge_detector:KEY_loop[3].fall|timer:timer_hold|timer_base:timer_inst
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => state~3.DATAIN
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => count[0].ENA
enable => count[27].ENA
enable => count[26].ENA
enable => count[25].ENA
enable => count[24].ENA
enable => count[23].ENA
enable => count[22].ENA
enable => count[21].ENA
enable => count[20].ENA
enable => count[19].ENA
enable => count[18].ENA
enable => count[17].ENA
enable => count[16].ENA
enable => count[15].ENA
enable => count[14].ENA
enable => count[13].ENA
enable => count[12].ENA
enable => count[11].ENA
enable => count[10].ENA
enable => count[9].ENA
enable => count[8].ENA
enable => count[7].ENA
enable => count[6].ENA
enable => count[5].ENA
enable => count[4].ENA
enable => count[3].ENA
enable => count[2].ENA
enable => count[1].ENA
resetn => count[0].ACLR
resetn => count[1].ACLR
resetn => count[2].ACLR
resetn => count[3].ACLR
resetn => count[4].ACLR
resetn => count[5].ACLR
resetn => count[6].PRESET
resetn => count[7].PRESET
resetn => count[8].ACLR
resetn => count[9].ACLR
resetn => count[10].ACLR
resetn => count[11].PRESET
resetn => count[12].ACLR
resetn => count[13].PRESET
resetn => count[14].PRESET
resetn => count[15].ACLR
resetn => count[16].ACLR
resetn => count[17].ACLR
resetn => count[18].ACLR
resetn => count[19].PRESET
resetn => count[20].PRESET
resetn => count[21].PRESET
resetn => count[22].PRESET
resetn => count[23].ACLR
resetn => count[24].ACLR
resetn => count[25].ACLR
resetn => count[26].PRESET
resetn => count[27].ACLR
resetn => state~5.DATAIN
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => state.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
sync_resetn => count.OUTPUTSELECT
start => Selector1.IN1
start => Selector0.IN1
done <= done.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|enable_gen:enable
clk => clk.IN1
reset => comb.IN1
mode => enable_out.OUTPUTSELECT
enable_out <= enable_out.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|enable_gen:enable|counter:count
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
clk => out[2]~reg0.CLK
clk => out[3]~reg0.CLK
clk => out[4]~reg0.CLK
clk => out[5]~reg0.CLK
clk => out[6]~reg0.CLK
clk => out[7]~reg0.CLK
clk => out[8]~reg0.CLK
clk => out[9]~reg0.CLK
clk => out[10]~reg0.CLK
clk => out[11]~reg0.CLK
clk => out[12]~reg0.CLK
clk => out[13]~reg0.CLK
clk => out[14]~reg0.CLK
clk => out[15]~reg0.CLK
clk => out[16]~reg0.CLK
clk => out[17]~reg0.CLK
clk => out[18]~reg0.CLK
clk => out[19]~reg0.CLK
clk => out[20]~reg0.CLK
clk => out[21]~reg0.CLK
clk => out[22]~reg0.CLK
clk => out[23]~reg0.CLK
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
reset_counter => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
in => out.OUTPUTSELECT
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= out[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= out[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= out[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= out[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= out[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= out[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= out[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= out[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|instruction_memory:rom
address[0] => Decoder0.IN7
address[1] => Decoder0.IN6
address[2] => Decoder0.IN5
address[3] => Decoder0.IN4
address[4] => Decoder0.IN3
address[5] => Decoder0.IN2
address[6] => Decoder0.IN1
address[7] => Decoder0.IN0
non_signed => Selector22.IN6
non_signed => Selector24.IN7
non_signed => Selector25.IN7
non_signed => Selector22.IN7
non_signed => Selector26.IN7
non_signed => Selector23.IN3
non_signed => Selector26.IN2
non_signed => Selector24.IN2
instruction[0] <= Selector26.DB_MAX_OUTPUT_PORT_TYPE
instruction[1] <= Selector25.DB_MAX_OUTPUT_PORT_TYPE
instruction[2] <= Selector24.DB_MAX_OUTPUT_PORT_TYPE
instruction[3] <= Selector23.DB_MAX_OUTPUT_PORT_TYPE
instruction[4] <= Selector22.DB_MAX_OUTPUT_PORT_TYPE
instruction[5] <= WideOr41.DB_MAX_OUTPUT_PORT_TYPE
instruction[6] <= WideOr40.DB_MAX_OUTPUT_PORT_TYPE
instruction[7] <= <GND>
instruction[8] <= WideOr38.DB_MAX_OUTPUT_PORT_TYPE
instruction[9] <= WideOr36.DB_MAX_OUTPUT_PORT_TYPE
instruction[10] <= WideOr34.DB_MAX_OUTPUT_PORT_TYPE
instruction[11] <= WideOr32.DB_MAX_OUTPUT_PORT_TYPE
instruction[12] <= WideOr30.DB_MAX_OUTPUT_PORT_TYPE
instruction[13] <= <GND>
instruction[14] <= <GND>
instruction[15] <= <GND>
instruction[16] <= WideOr28.DB_MAX_OUTPUT_PORT_TYPE
instruction[17] <= WideOr26.DB_MAX_OUTPUT_PORT_TYPE
instruction[18] <= WideOr24.DB_MAX_OUTPUT_PORT_TYPE
instruction[19] <= WideOr22.DB_MAX_OUTPUT_PORT_TYPE
instruction[20] <= WideOr20.DB_MAX_OUTPUT_PORT_TYPE
instruction[21] <= WideOr18.DB_MAX_OUTPUT_PORT_TYPE
instruction[22] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
instruction[23] <= <GND>
instruction[24] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
instruction[25] <= WideOr13.DB_MAX_OUTPUT_PORT_TYPE
instruction[26] <= Selector5.DB_MAX_OUTPUT_PORT_TYPE
instruction[27] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
instruction[28] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
instruction[29] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
instruction[30] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
instruction[31] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|cpu:core
clk => clk.IN2
enable => enable.IN2
resetn => resetn.IN2
instruction[0] => instruction[0].IN1
instruction[1] => instruction[1].IN1
instruction[2] => instruction[2].IN1
instruction[3] => instruction[3].IN1
instruction[4] => instruction[4].IN1
instruction[5] => instruction[5].IN1
instruction[6] => instruction[6].IN1
instruction[7] => instruction[7].IN1
instruction[8] => instruction[8].IN1
instruction[9] => instruction[9].IN1
instruction[10] => instruction[10].IN1
instruction[11] => instruction[11].IN1
instruction[12] => instruction[12].IN1
instruction[13] => instruction[13].IN1
instruction[14] => instruction[14].IN1
instruction[15] => instruction[15].IN1
instruction[16] => instruction[16].IN1
instruction[17] => instruction[17].IN1
instruction[18] => instruction[18].IN1
instruction[19] => instruction[19].IN1
instruction[20] => instruction[20].IN1
instruction[21] => instruction[21].IN1
instruction[22] => instruction[22].IN1
instruction[23] => instruction[23].IN1
instruction[24] => instruction[24].IN1
instruction[25] => instruction[25].IN1
instruction[26] => instruction[26].IN1
instruction[27] => instruction[27].IN1
instruction[28] => instruction[28].IN1
instruction[29] => instruction[29].IN1
instruction[30] => instruction[30].IN1
instruction[31] => instruction[31].IN1
instruction_pointer[0] <= instruction_pointer:instruct.instruction_pointer
instruction_pointer[1] <= instruction_pointer:instruct.instruction_pointer
instruction_pointer[2] <= instruction_pointer:instruct.instruction_pointer
instruction_pointer[3] <= instruction_pointer:instruct.instruction_pointer
instruction_pointer[4] <= instruction_pointer:instruct.instruction_pointer
instruction_pointer[5] <= instruction_pointer:instruct.instruction_pointer
instruction_pointer[6] <= instruction_pointer:instruct.instruction_pointer
instruction_pointer[7] <= instruction_pointer:instruct.instruction_pointer
din[0] => din[0].IN1
din[1] => din[1].IN1
din[2] => din[2].IN1
din[3] => din[3].IN1
din[4] => din[4].IN1
din[5] => din[5].IN1
din[6] => din[6].IN1
din[7] => din[7].IN1
gpi[0] => flag_inputs[0].IN2
gpi[1] => gpi[1].IN2
gpi[2] => flag_inputs[2].IN2
gpi[3] => flag_inputs[3].IN2
gpi_hold => gpi_hold.IN1
reg_dout[0] <= register_file:register.reg_dout
reg_dout[1] <= register_file:register.reg_dout
reg_dout[2] <= register_file:register.reg_dout
reg_dout[3] <= register_file:register.reg_dout
reg_dout[4] <= register_file:register.reg_dout
reg_dout[5] <= register_file:register.reg_dout
reg_dout[6] <= register_file:register.reg_dout
reg_dout[7] <= register_file:register.reg_dout
reg_gout[0] <= register_file:register.reg_gout
reg_gout[1] <= register_file:register.reg_gout
reg_gout[2] <= register_file:register.reg_gout
reg_gout[3] <= register_file:register.reg_gout
reg_gout[4] <= register_file:register.reg_gout
reg_gout[5] <= register_file:register.reg_gout
reg_gout[6] <= register_file:register.reg_gout
reg_gout[7] <= reg_gout[7].DB_MAX_OUTPUT_PORT_TYPE
reg_flag[0] <= register_file:register.reg_flag
reg_flag[1] <= register_file:register.reg_flag
reg_flag[2] <= register_file:register.reg_flag
reg_flag[3] <= register_file:register.reg_flag
reg_flag[4] <= register_file:register.reg_flag
reg_flag[5] <= register_file:register.reg_flag
reg_flag[6] <= register_file:register.reg_flag
reg_flag[7] <= register_file:register.reg_flag
non_signed <= non_signed.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|cpu:core|instruction_splitter:split
insruction[0] => address[0].DATAIN
insruction[1] => address[1].DATAIN
insruction[2] => address[2].DATAIN
insruction[3] => address[3].DATAIN
insruction[4] => address[4].DATAIN
insruction[5] => address[5].DATAIN
insruction[6] => address[6].DATAIN
insruction[7] => address[7].DATAIN
insruction[8] => arg_2[0].DATAIN
insruction[9] => arg_2[1].DATAIN
insruction[10] => arg_2[2].DATAIN
insruction[11] => arg_2[3].DATAIN
insruction[12] => arg_2[4].DATAIN
insruction[13] => arg_2[5].DATAIN
insruction[14] => arg_2[6].DATAIN
insruction[15] => arg_2[7].DATAIN
insruction[16] => arg_type_2.DATAIN
insruction[17] => arg_1[0].DATAIN
insruction[18] => arg_1[1].DATAIN
insruction[19] => arg_1[2].DATAIN
insruction[20] => arg_1[3].DATAIN
insruction[21] => arg_1[4].DATAIN
insruction[22] => arg_1[5].DATAIN
insruction[23] => arg_1[6].DATAIN
insruction[24] => arg_1[7].DATAIN
insruction[25] => arg_type_1.DATAIN
insruction[26] => command[0].DATAIN
insruction[27] => command[1].DATAIN
insruction[28] => command[2].DATAIN
insruction[29] => command_group[0].DATAIN
insruction[30] => command_group[1].DATAIN
insruction[31] => command_group[2].DATAIN
command_group[0] <= insruction[29].DB_MAX_OUTPUT_PORT_TYPE
command_group[1] <= insruction[30].DB_MAX_OUTPUT_PORT_TYPE
command_group[2] <= insruction[31].DB_MAX_OUTPUT_PORT_TYPE
command[0] <= insruction[26].DB_MAX_OUTPUT_PORT_TYPE
command[1] <= insruction[27].DB_MAX_OUTPUT_PORT_TYPE
command[2] <= insruction[28].DB_MAX_OUTPUT_PORT_TYPE
arg_type_1 <= insruction[25].DB_MAX_OUTPUT_PORT_TYPE
arg_1[0] <= insruction[17].DB_MAX_OUTPUT_PORT_TYPE
arg_1[1] <= insruction[18].DB_MAX_OUTPUT_PORT_TYPE
arg_1[2] <= insruction[19].DB_MAX_OUTPUT_PORT_TYPE
arg_1[3] <= insruction[20].DB_MAX_OUTPUT_PORT_TYPE
arg_1[4] <= insruction[21].DB_MAX_OUTPUT_PORT_TYPE
arg_1[5] <= insruction[22].DB_MAX_OUTPUT_PORT_TYPE
arg_1[6] <= insruction[23].DB_MAX_OUTPUT_PORT_TYPE
arg_1[7] <= insruction[24].DB_MAX_OUTPUT_PORT_TYPE
arg_type_2 <= insruction[16].DB_MAX_OUTPUT_PORT_TYPE
arg_2[0] <= insruction[8].DB_MAX_OUTPUT_PORT_TYPE
arg_2[1] <= insruction[9].DB_MAX_OUTPUT_PORT_TYPE
arg_2[2] <= insruction[10].DB_MAX_OUTPUT_PORT_TYPE
arg_2[3] <= insruction[11].DB_MAX_OUTPUT_PORT_TYPE
arg_2[4] <= insruction[12].DB_MAX_OUTPUT_PORT_TYPE
arg_2[5] <= insruction[13].DB_MAX_OUTPUT_PORT_TYPE
arg_2[6] <= insruction[14].DB_MAX_OUTPUT_PORT_TYPE
arg_2[7] <= insruction[15].DB_MAX_OUTPUT_PORT_TYPE
address[0] <= insruction[0].DB_MAX_OUTPUT_PORT_TYPE
address[1] <= insruction[1].DB_MAX_OUTPUT_PORT_TYPE
address[2] <= insruction[2].DB_MAX_OUTPUT_PORT_TYPE
address[3] <= insruction[3].DB_MAX_OUTPUT_PORT_TYPE
address[4] <= insruction[4].DB_MAX_OUTPUT_PORT_TYPE
address[5] <= insruction[5].DB_MAX_OUTPUT_PORT_TYPE
address[6] <= insruction[6].DB_MAX_OUTPUT_PORT_TYPE
address[7] <= insruction[7].DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|cpu:core|controller:control
command_group[0] => Decoder2.IN2
command_group[0] => Mux0.IN10
command_group[0] => Mux1.IN10
command_group[0] => Mux2.IN10
command_group[0] => Mux3.IN10
command_group[1] => Decoder2.IN1
command_group[1] => Mux0.IN9
command_group[1] => Mux1.IN9
command_group[1] => Mux2.IN9
command_group[1] => Mux3.IN9
command_group[2] => Decoder2.IN0
command_group[2] => Mux0.IN8
command_group[2] => Mux1.IN8
command_group[2] => Mux2.IN8
command_group[2] => Mux3.IN8
command[0] => Decoder0.IN2
command[0] => Decoder1.IN1
command[0] => Mux3.IN7
command[1] => Decoder0.IN1
command[1] => Decoder1.IN0
command[2] => Decoder0.IN0
alu_op[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
alu_op[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
alu_op[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
alu_op[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
branch_select <= Decoder2.DB_MAX_OUTPUT_PORT_TYPE
write_enable <= write_enable.DB_MAX_OUTPUT_PORT_TYPE
is_atc <= Decoder2.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|cpu:core|alu:logic_calc
operand_a[0] => Add0.IN8
operand_a[0] => Add1.IN9
operand_a[0] => Mult0.IN7
operand_a[0] => Mult1.IN7
operand_a[0] => Equal0.IN7
operand_a[0] => LessThan0.IN8
operand_a[0] => LessThan1.IN8
operand_a[0] => LessThan2.IN8
operand_a[0] => LessThan3.IN8
operand_a[0] => result.IN0
operand_a[0] => result.IN0
operand_a[0] => result.IN0
operand_a[0] => Mux7.IN11
operand_a[0] => Mux6.IN11
operand_a[0] => Selector0.IN5
operand_a[1] => Add0.IN7
operand_a[1] => Add1.IN8
operand_a[1] => Mult0.IN6
operand_a[1] => Mult1.IN6
operand_a[1] => Equal0.IN6
operand_a[1] => LessThan0.IN7
operand_a[1] => LessThan1.IN7
operand_a[1] => LessThan2.IN7
operand_a[1] => LessThan3.IN7
operand_a[1] => result.IN0
operand_a[1] => result.IN0
operand_a[1] => result.IN0
operand_a[1] => Mux6.IN10
operand_a[1] => Mux5.IN11
operand_a[1] => Mux7.IN10
operand_a[2] => Add0.IN6
operand_a[2] => Add1.IN7
operand_a[2] => Mult0.IN5
operand_a[2] => Mult1.IN5
operand_a[2] => Equal0.IN5
operand_a[2] => LessThan0.IN6
operand_a[2] => LessThan1.IN6
operand_a[2] => LessThan2.IN6
operand_a[2] => LessThan3.IN6
operand_a[2] => result.IN0
operand_a[2] => result.IN0
operand_a[2] => result.IN0
operand_a[2] => Mux5.IN10
operand_a[2] => Mux4.IN11
operand_a[2] => Mux6.IN9
operand_a[3] => Add0.IN5
operand_a[3] => Add1.IN6
operand_a[3] => Mult0.IN4
operand_a[3] => Mult1.IN4
operand_a[3] => Equal0.IN4
operand_a[3] => LessThan0.IN5
operand_a[3] => LessThan1.IN5
operand_a[3] => LessThan2.IN5
operand_a[3] => LessThan3.IN5
operand_a[3] => result.IN0
operand_a[3] => result.IN0
operand_a[3] => result.IN0
operand_a[3] => Mux4.IN10
operand_a[3] => Mux3.IN11
operand_a[3] => Mux5.IN9
operand_a[4] => Add0.IN4
operand_a[4] => Add1.IN5
operand_a[4] => Mult0.IN3
operand_a[4] => Mult1.IN3
operand_a[4] => Equal0.IN3
operand_a[4] => LessThan0.IN4
operand_a[4] => LessThan1.IN4
operand_a[4] => LessThan2.IN4
operand_a[4] => LessThan3.IN4
operand_a[4] => result.IN0
operand_a[4] => result.IN0
operand_a[4] => result.IN0
operand_a[4] => Mux3.IN10
operand_a[4] => Mux2.IN11
operand_a[4] => Mux4.IN9
operand_a[5] => Add0.IN3
operand_a[5] => Add1.IN4
operand_a[5] => Mult0.IN2
operand_a[5] => Mult1.IN2
operand_a[5] => Equal0.IN2
operand_a[5] => LessThan0.IN3
operand_a[5] => LessThan1.IN3
operand_a[5] => LessThan2.IN3
operand_a[5] => LessThan3.IN3
operand_a[5] => result.IN0
operand_a[5] => result.IN0
operand_a[5] => result.IN0
operand_a[5] => Mux2.IN10
operand_a[5] => Mux1.IN11
operand_a[5] => Mux3.IN9
operand_a[6] => Add0.IN2
operand_a[6] => Add1.IN3
operand_a[6] => Mult0.IN1
operand_a[6] => Mult1.IN1
operand_a[6] => Equal0.IN1
operand_a[6] => LessThan0.IN2
operand_a[6] => LessThan1.IN2
operand_a[6] => LessThan2.IN2
operand_a[6] => LessThan3.IN2
operand_a[6] => result.IN0
operand_a[6] => result.IN0
operand_a[6] => result.IN0
operand_a[6] => Mux1.IN10
operand_a[6] => Mux0.IN11
operand_a[6] => Mux2.IN9
operand_a[7] => Add0.IN1
operand_a[7] => Add1.IN1
operand_a[7] => Add1.IN2
operand_a[7] => Mult0.IN0
operand_a[7] => Mult1.IN0
operand_a[7] => Equal0.IN0
operand_a[7] => LessThan0.IN1
operand_a[7] => LessThan1.IN1
operand_a[7] => LessThan2.IN1
operand_a[7] => LessThan3.IN1
operand_a[7] => result.IN0
operand_a[7] => result.IN0
operand_a[7] => result.IN0
operand_a[7] => Mux0.IN10
operand_a[7] => Selector0.IN4
operand_a[7] => Mux1.IN9
operand_b[0] => Add0.IN16
operand_b[0] => Add1.IN18
operand_b[0] => Mult0.IN15
operand_b[0] => Mult1.IN15
operand_b[0] => Equal0.IN15
operand_b[0] => LessThan0.IN16
operand_b[0] => LessThan1.IN16
operand_b[0] => LessThan2.IN16
operand_b[0] => LessThan3.IN16
operand_b[0] => result.IN1
operand_b[0] => result.IN1
operand_b[0] => result.IN1
operand_b[1] => Add0.IN15
operand_b[1] => Add1.IN17
operand_b[1] => Mult0.IN14
operand_b[1] => Mult1.IN14
operand_b[1] => Equal0.IN14
operand_b[1] => LessThan0.IN15
operand_b[1] => LessThan1.IN15
operand_b[1] => LessThan2.IN15
operand_b[1] => LessThan3.IN15
operand_b[1] => result.IN1
operand_b[1] => result.IN1
operand_b[1] => result.IN1
operand_b[2] => Add0.IN14
operand_b[2] => Add1.IN16
operand_b[2] => Mult0.IN13
operand_b[2] => Mult1.IN13
operand_b[2] => Equal0.IN13
operand_b[2] => LessThan0.IN14
operand_b[2] => LessThan1.IN14
operand_b[2] => LessThan2.IN14
operand_b[2] => LessThan3.IN14
operand_b[2] => result.IN1
operand_b[2] => result.IN1
operand_b[2] => result.IN1
operand_b[3] => Add0.IN13
operand_b[3] => Add1.IN15
operand_b[3] => Mult0.IN12
operand_b[3] => Mult1.IN12
operand_b[3] => Equal0.IN12
operand_b[3] => LessThan0.IN13
operand_b[3] => LessThan1.IN13
operand_b[3] => LessThan2.IN13
operand_b[3] => LessThan3.IN13
operand_b[3] => result.IN1
operand_b[3] => result.IN1
operand_b[3] => result.IN1
operand_b[4] => Add0.IN12
operand_b[4] => Add1.IN14
operand_b[4] => Mult0.IN11
operand_b[4] => Mult1.IN11
operand_b[4] => Equal0.IN11
operand_b[4] => LessThan0.IN12
operand_b[4] => LessThan1.IN12
operand_b[4] => LessThan2.IN12
operand_b[4] => LessThan3.IN12
operand_b[4] => result.IN1
operand_b[4] => result.IN1
operand_b[4] => result.IN1
operand_b[5] => Add0.IN11
operand_b[5] => Add1.IN13
operand_b[5] => Mult0.IN10
operand_b[5] => Mult1.IN10
operand_b[5] => Equal0.IN10
operand_b[5] => LessThan0.IN11
operand_b[5] => LessThan1.IN11
operand_b[5] => LessThan2.IN11
operand_b[5] => LessThan3.IN11
operand_b[5] => result.IN1
operand_b[5] => result.IN1
operand_b[5] => result.IN1
operand_b[6] => Add0.IN10
operand_b[6] => Add1.IN12
operand_b[6] => Mult0.IN9
operand_b[6] => Mult1.IN9
operand_b[6] => Equal0.IN9
operand_b[6] => LessThan0.IN10
operand_b[6] => LessThan1.IN10
operand_b[6] => LessThan2.IN10
operand_b[6] => LessThan3.IN10
operand_b[6] => result.IN1
operand_b[6] => result.IN1
operand_b[6] => result.IN1
operand_b[7] => Add0.IN9
operand_b[7] => Add1.IN10
operand_b[7] => Add1.IN11
operand_b[7] => Mult0.IN8
operand_b[7] => Mult1.IN8
operand_b[7] => Equal0.IN8
operand_b[7] => LessThan0.IN9
operand_b[7] => LessThan1.IN9
operand_b[7] => LessThan2.IN9
operand_b[7] => LessThan3.IN9
operand_b[7] => result.IN1
operand_b[7] => result.IN1
operand_b[7] => result.IN1
alu_op[0] => Mux0.IN15
alu_op[0] => Mux1.IN15
alu_op[0] => Mux2.IN15
alu_op[0] => Mux3.IN15
alu_op[0] => Mux4.IN15
alu_op[0] => Mux5.IN15
alu_op[0] => Mux6.IN15
alu_op[0] => Mux7.IN15
alu_op[0] => Equal1.IN7
alu_op[0] => Equal2.IN7
alu_op[0] => Mux8.IN19
alu_op[1] => Mux0.IN14
alu_op[1] => Mux1.IN14
alu_op[1] => Mux2.IN14
alu_op[1] => Mux3.IN14
alu_op[1] => Mux4.IN14
alu_op[1] => Mux5.IN14
alu_op[1] => Mux6.IN14
alu_op[1] => Mux7.IN14
alu_op[1] => Equal1.IN6
alu_op[1] => Equal2.IN6
alu_op[1] => Mux8.IN18
alu_op[2] => Mux0.IN13
alu_op[2] => Mux1.IN13
alu_op[2] => Mux2.IN13
alu_op[2] => Mux3.IN13
alu_op[2] => Mux4.IN13
alu_op[2] => Mux5.IN13
alu_op[2] => Mux6.IN13
alu_op[2] => Mux7.IN13
alu_op[2] => Equal1.IN5
alu_op[2] => Equal2.IN5
alu_op[2] => Mux8.IN17
alu_op[3] => Mux0.IN12
alu_op[3] => Mux1.IN12
alu_op[3] => Mux2.IN12
alu_op[3] => Mux3.IN12
alu_op[3] => Mux4.IN12
alu_op[3] => Mux5.IN12
alu_op[3] => Mux6.IN12
alu_op[3] => Mux7.IN12
alu_op[3] => Equal1.IN4
alu_op[3] => Equal2.IN4
alu_op[3] => Mux8.IN16
result[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
arithmetic_overflow <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
shift_overflow <= Selector0.DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|cpu:core|register_file:register
clk => reg_arr[31][0].CLK
clk => reg_arr[31][1].CLK
clk => reg_arr[31][2].CLK
clk => reg_arr[31][3].CLK
clk => reg_arr[31][4].CLK
clk => reg_arr[31][5].CLK
clk => reg_arr[31][6].CLK
clk => reg_arr[31][7].CLK
clk => reg_arr[30][0].CLK
clk => reg_arr[30][1].CLK
clk => reg_arr[30][2].CLK
clk => reg_arr[30][3].CLK
clk => reg_arr[30][4].CLK
clk => reg_arr[30][5].CLK
clk => reg_arr[30][6].CLK
clk => reg_arr[30][7].CLK
clk => reg_arr[29][0].CLK
clk => reg_arr[29][1].CLK
clk => reg_arr[29][2].CLK
clk => reg_arr[29][3].CLK
clk => reg_arr[29][4].CLK
clk => reg_arr[29][5].CLK
clk => reg_arr[29][6].CLK
clk => reg_arr[29][7].CLK
clk => reg_arr[28][0].CLK
clk => reg_arr[28][1].CLK
clk => reg_arr[28][2].CLK
clk => reg_arr[28][3].CLK
clk => reg_arr[28][4].CLK
clk => reg_arr[28][5].CLK
clk => reg_arr[28][6].CLK
clk => reg_arr[28][7].CLK
clk => reg_arr[27][0].CLK
clk => reg_arr[27][1].CLK
clk => reg_arr[27][2].CLK
clk => reg_arr[27][3].CLK
clk => reg_arr[27][4].CLK
clk => reg_arr[27][5].CLK
clk => reg_arr[27][6].CLK
clk => reg_arr[27][7].CLK
clk => reg_arr[26][0].CLK
clk => reg_arr[26][1].CLK
clk => reg_arr[26][2].CLK
clk => reg_arr[26][3].CLK
clk => reg_arr[26][4].CLK
clk => reg_arr[26][5].CLK
clk => reg_arr[26][6].CLK
clk => reg_arr[26][7].CLK
clk => reg_arr[25][0].CLK
clk => reg_arr[25][1].CLK
clk => reg_arr[25][2].CLK
clk => reg_arr[25][3].CLK
clk => reg_arr[25][4].CLK
clk => reg_arr[25][5].CLK
clk => reg_arr[25][6].CLK
clk => reg_arr[25][7].CLK
clk => reg_arr[24][0].CLK
clk => reg_arr[24][1].CLK
clk => reg_arr[24][2].CLK
clk => reg_arr[24][3].CLK
clk => reg_arr[24][4].CLK
clk => reg_arr[24][5].CLK
clk => reg_arr[24][6].CLK
clk => reg_arr[24][7].CLK
clk => reg_arr[23][0].CLK
clk => reg_arr[23][1].CLK
clk => reg_arr[23][2].CLK
clk => reg_arr[23][3].CLK
clk => reg_arr[23][4].CLK
clk => reg_arr[23][5].CLK
clk => reg_arr[23][6].CLK
clk => reg_arr[23][7].CLK
clk => reg_arr[22][0].CLK
clk => reg_arr[22][1].CLK
clk => reg_arr[22][2].CLK
clk => reg_arr[22][3].CLK
clk => reg_arr[22][4].CLK
clk => reg_arr[22][5].CLK
clk => reg_arr[22][6].CLK
clk => reg_arr[22][7].CLK
clk => reg_arr[21][0].CLK
clk => reg_arr[21][1].CLK
clk => reg_arr[21][2].CLK
clk => reg_arr[21][3].CLK
clk => reg_arr[21][4].CLK
clk => reg_arr[21][5].CLK
clk => reg_arr[21][6].CLK
clk => reg_arr[21][7].CLK
clk => reg_arr[20][0].CLK
clk => reg_arr[20][1].CLK
clk => reg_arr[20][2].CLK
clk => reg_arr[20][3].CLK
clk => reg_arr[20][4].CLK
clk => reg_arr[20][5].CLK
clk => reg_arr[20][6].CLK
clk => reg_arr[20][7].CLK
clk => reg_arr[19][0].CLK
clk => reg_arr[19][1].CLK
clk => reg_arr[19][2].CLK
clk => reg_arr[19][3].CLK
clk => reg_arr[19][4].CLK
clk => reg_arr[19][5].CLK
clk => reg_arr[19][6].CLK
clk => reg_arr[19][7].CLK
clk => reg_arr[18][0].CLK
clk => reg_arr[18][1].CLK
clk => reg_arr[18][2].CLK
clk => reg_arr[18][3].CLK
clk => reg_arr[18][4].CLK
clk => reg_arr[18][5].CLK
clk => reg_arr[18][6].CLK
clk => reg_arr[18][7].CLK
clk => reg_arr[17][0].CLK
clk => reg_arr[17][1].CLK
clk => reg_arr[17][2].CLK
clk => reg_arr[17][3].CLK
clk => reg_arr[17][4].CLK
clk => reg_arr[17][5].CLK
clk => reg_arr[17][6].CLK
clk => reg_arr[17][7].CLK
clk => reg_arr[16][0].CLK
clk => reg_arr[16][1].CLK
clk => reg_arr[16][2].CLK
clk => reg_arr[16][3].CLK
clk => reg_arr[16][4].CLK
clk => reg_arr[16][5].CLK
clk => reg_arr[16][6].CLK
clk => reg_arr[16][7].CLK
clk => reg_arr[15][0].CLK
clk => reg_arr[15][1].CLK
clk => reg_arr[15][2].CLK
clk => reg_arr[15][3].CLK
clk => reg_arr[15][4].CLK
clk => reg_arr[15][5].CLK
clk => reg_arr[15][6].CLK
clk => reg_arr[15][7].CLK
clk => reg_arr[14][0].CLK
clk => reg_arr[14][1].CLK
clk => reg_arr[14][2].CLK
clk => reg_arr[14][3].CLK
clk => reg_arr[14][4].CLK
clk => reg_arr[14][5].CLK
clk => reg_arr[14][6].CLK
clk => reg_arr[14][7].CLK
clk => reg_arr[13][0].CLK
clk => reg_arr[13][1].CLK
clk => reg_arr[13][2].CLK
clk => reg_arr[13][3].CLK
clk => reg_arr[13][4].CLK
clk => reg_arr[13][5].CLK
clk => reg_arr[13][6].CLK
clk => reg_arr[13][7].CLK
clk => reg_arr[12][0].CLK
clk => reg_arr[12][1].CLK
clk => reg_arr[12][2].CLK
clk => reg_arr[12][3].CLK
clk => reg_arr[12][4].CLK
clk => reg_arr[12][5].CLK
clk => reg_arr[12][6].CLK
clk => reg_arr[12][7].CLK
clk => reg_arr[11][0].CLK
clk => reg_arr[11][1].CLK
clk => reg_arr[11][2].CLK
clk => reg_arr[11][3].CLK
clk => reg_arr[11][4].CLK
clk => reg_arr[11][5].CLK
clk => reg_arr[11][6].CLK
clk => reg_arr[11][7].CLK
clk => reg_arr[10][0].CLK
clk => reg_arr[10][1].CLK
clk => reg_arr[10][2].CLK
clk => reg_arr[10][3].CLK
clk => reg_arr[10][4].CLK
clk => reg_arr[10][5].CLK
clk => reg_arr[10][6].CLK
clk => reg_arr[10][7].CLK
clk => reg_arr[9][0].CLK
clk => reg_arr[9][1].CLK
clk => reg_arr[9][2].CLK
clk => reg_arr[9][3].CLK
clk => reg_arr[9][4].CLK
clk => reg_arr[9][5].CLK
clk => reg_arr[9][6].CLK
clk => reg_arr[9][7].CLK
clk => reg_arr[8][0].CLK
clk => reg_arr[8][1].CLK
clk => reg_arr[8][2].CLK
clk => reg_arr[8][3].CLK
clk => reg_arr[8][4].CLK
clk => reg_arr[8][5].CLK
clk => reg_arr[8][6].CLK
clk => reg_arr[8][7].CLK
clk => reg_arr[7][0].CLK
clk => reg_arr[7][1].CLK
clk => reg_arr[7][2].CLK
clk => reg_arr[7][3].CLK
clk => reg_arr[7][4].CLK
clk => reg_arr[7][5].CLK
clk => reg_arr[7][6].CLK
clk => reg_arr[7][7].CLK
clk => reg_arr[6][0].CLK
clk => reg_arr[6][1].CLK
clk => reg_arr[6][2].CLK
clk => reg_arr[6][3].CLK
clk => reg_arr[6][4].CLK
clk => reg_arr[6][5].CLK
clk => reg_arr[6][6].CLK
clk => reg_arr[6][7].CLK
clk => reg_arr[5][0].CLK
clk => reg_arr[5][1].CLK
clk => reg_arr[5][2].CLK
clk => reg_arr[5][3].CLK
clk => reg_arr[5][4].CLK
clk => reg_arr[5][5].CLK
clk => reg_arr[5][6].CLK
clk => reg_arr[5][7].CLK
clk => reg_arr[4][0].CLK
clk => reg_arr[4][1].CLK
clk => reg_arr[4][2].CLK
clk => reg_arr[4][3].CLK
clk => reg_arr[4][4].CLK
clk => reg_arr[4][5].CLK
clk => reg_arr[4][6].CLK
clk => reg_arr[4][7].CLK
clk => reg_arr[3][0].CLK
clk => reg_arr[3][1].CLK
clk => reg_arr[3][2].CLK
clk => reg_arr[3][3].CLK
clk => reg_arr[3][4].CLK
clk => reg_arr[3][5].CLK
clk => reg_arr[3][6].CLK
clk => reg_arr[3][7].CLK
clk => reg_arr[2][0].CLK
clk => reg_arr[2][1].CLK
clk => reg_arr[2][2].CLK
clk => reg_arr[2][3].CLK
clk => reg_arr[2][4].CLK
clk => reg_arr[2][5].CLK
clk => reg_arr[2][6].CLK
clk => reg_arr[2][7].CLK
clk => reg_arr[1][0].CLK
clk => reg_arr[1][1].CLK
clk => reg_arr[1][2].CLK
clk => reg_arr[1][3].CLK
clk => reg_arr[1][4].CLK
clk => reg_arr[1][5].CLK
clk => reg_arr[1][6].CLK
clk => reg_arr[1][7].CLK
clk => reg_arr[0][0].CLK
clk => reg_arr[0][1].CLK
clk => reg_arr[0][2].CLK
clk => reg_arr[0][3].CLK
clk => reg_arr[0][4].CLK
clk => reg_arr[0][5].CLK
clk => reg_arr[0][6].CLK
clk => reg_arr[0][7].CLK
enable => always0.IN0
enable => always0.IN0
resetn => reg_arr[31][0].ACLR
resetn => reg_arr[31][1].ACLR
resetn => reg_arr[31][2].ACLR
resetn => reg_arr[31][3].ACLR
resetn => reg_arr[31][4].ACLR
resetn => reg_arr[31][5].ACLR
resetn => reg_arr[31][6].ACLR
resetn => reg_arr[31][7].ACLR
resetn => reg_arr[30][0].ACLR
resetn => reg_arr[30][1].ACLR
resetn => reg_arr[30][2].ACLR
resetn => reg_arr[30][3].ACLR
resetn => reg_arr[30][4].ACLR
resetn => reg_arr[30][5].ACLR
resetn => reg_arr[30][6].ACLR
resetn => reg_arr[30][7].ACLR
resetn => reg_arr[29][0].ACLR
resetn => reg_arr[29][1].ACLR
resetn => reg_arr[29][2].ACLR
resetn => reg_arr[29][3].ACLR
resetn => reg_arr[29][4].ACLR
resetn => reg_arr[29][5].ACLR
resetn => reg_arr[29][6].ACLR
resetn => reg_arr[29][7].ACLR
resetn => reg_arr[28][0].ACLR
resetn => reg_arr[28][1].ACLR
resetn => reg_arr[28][2].ACLR
resetn => reg_arr[28][3].ACLR
resetn => reg_arr[28][4].ACLR
resetn => reg_arr[28][5].ACLR
resetn => reg_arr[28][6].ACLR
resetn => reg_arr[28][7].ACLR
resetn => reg_arr[27][0].ACLR
resetn => reg_arr[27][1].ACLR
resetn => reg_arr[27][2].ACLR
resetn => reg_arr[27][3].ACLR
resetn => reg_arr[27][4].ACLR
resetn => reg_arr[27][5].ACLR
resetn => reg_arr[27][6].ACLR
resetn => reg_arr[27][7].ACLR
resetn => reg_arr[26][0].ACLR
resetn => reg_arr[26][1].ACLR
resetn => reg_arr[26][2].ACLR
resetn => reg_arr[26][3].ACLR
resetn => reg_arr[26][4].ACLR
resetn => reg_arr[26][5].ACLR
resetn => reg_arr[26][6].ACLR
resetn => reg_arr[26][7].ACLR
resetn => reg_arr[25][0].ACLR
resetn => reg_arr[25][1].ACLR
resetn => reg_arr[25][2].ACLR
resetn => reg_arr[25][3].ACLR
resetn => reg_arr[25][4].ACLR
resetn => reg_arr[25][5].ACLR
resetn => reg_arr[25][6].ACLR
resetn => reg_arr[25][7].ACLR
resetn => reg_arr[24][0].ACLR
resetn => reg_arr[24][1].ACLR
resetn => reg_arr[24][2].ACLR
resetn => reg_arr[24][3].ACLR
resetn => reg_arr[24][4].ACLR
resetn => reg_arr[24][5].ACLR
resetn => reg_arr[24][6].ACLR
resetn => reg_arr[24][7].ACLR
resetn => reg_arr[23][0].ACLR
resetn => reg_arr[23][1].ACLR
resetn => reg_arr[23][2].ACLR
resetn => reg_arr[23][3].ACLR
resetn => reg_arr[23][4].ACLR
resetn => reg_arr[23][5].ACLR
resetn => reg_arr[23][6].ACLR
resetn => reg_arr[23][7].ACLR
resetn => reg_arr[22][0].ACLR
resetn => reg_arr[22][1].ACLR
resetn => reg_arr[22][2].ACLR
resetn => reg_arr[22][3].ACLR
resetn => reg_arr[22][4].ACLR
resetn => reg_arr[22][5].ACLR
resetn => reg_arr[22][6].ACLR
resetn => reg_arr[22][7].ACLR
resetn => reg_arr[21][0].ACLR
resetn => reg_arr[21][1].ACLR
resetn => reg_arr[21][2].ACLR
resetn => reg_arr[21][3].ACLR
resetn => reg_arr[21][4].ACLR
resetn => reg_arr[21][5].ACLR
resetn => reg_arr[21][6].ACLR
resetn => reg_arr[21][7].ACLR
resetn => reg_arr[20][0].ACLR
resetn => reg_arr[20][1].ACLR
resetn => reg_arr[20][2].ACLR
resetn => reg_arr[20][3].ACLR
resetn => reg_arr[20][4].ACLR
resetn => reg_arr[20][5].ACLR
resetn => reg_arr[20][6].ACLR
resetn => reg_arr[20][7].ACLR
resetn => reg_arr[19][0].ACLR
resetn => reg_arr[19][1].ACLR
resetn => reg_arr[19][2].ACLR
resetn => reg_arr[19][3].ACLR
resetn => reg_arr[19][4].ACLR
resetn => reg_arr[19][5].ACLR
resetn => reg_arr[19][6].ACLR
resetn => reg_arr[19][7].ACLR
resetn => reg_arr[18][0].ACLR
resetn => reg_arr[18][1].ACLR
resetn => reg_arr[18][2].ACLR
resetn => reg_arr[18][3].ACLR
resetn => reg_arr[18][4].ACLR
resetn => reg_arr[18][5].ACLR
resetn => reg_arr[18][6].ACLR
resetn => reg_arr[18][7].ACLR
resetn => reg_arr[17][0].ACLR
resetn => reg_arr[17][1].ACLR
resetn => reg_arr[17][2].ACLR
resetn => reg_arr[17][3].ACLR
resetn => reg_arr[17][4].ACLR
resetn => reg_arr[17][5].ACLR
resetn => reg_arr[17][6].ACLR
resetn => reg_arr[17][7].ACLR
resetn => reg_arr[16][0].ACLR
resetn => reg_arr[16][1].ACLR
resetn => reg_arr[16][2].ACLR
resetn => reg_arr[16][3].ACLR
resetn => reg_arr[16][4].ACLR
resetn => reg_arr[16][5].ACLR
resetn => reg_arr[16][6].ACLR
resetn => reg_arr[16][7].ACLR
resetn => reg_arr[15][0].ACLR
resetn => reg_arr[15][1].ACLR
resetn => reg_arr[15][2].ACLR
resetn => reg_arr[15][3].ACLR
resetn => reg_arr[15][4].ACLR
resetn => reg_arr[15][5].ACLR
resetn => reg_arr[15][6].ACLR
resetn => reg_arr[15][7].ACLR
resetn => reg_arr[14][0].ACLR
resetn => reg_arr[14][1].ACLR
resetn => reg_arr[14][2].ACLR
resetn => reg_arr[14][3].ACLR
resetn => reg_arr[14][4].ACLR
resetn => reg_arr[14][5].ACLR
resetn => reg_arr[14][6].ACLR
resetn => reg_arr[14][7].ACLR
resetn => reg_arr[13][0].ACLR
resetn => reg_arr[13][1].ACLR
resetn => reg_arr[13][2].ACLR
resetn => reg_arr[13][3].ACLR
resetn => reg_arr[13][4].ACLR
resetn => reg_arr[13][5].ACLR
resetn => reg_arr[13][6].ACLR
resetn => reg_arr[13][7].ACLR
resetn => reg_arr[12][0].ACLR
resetn => reg_arr[12][1].ACLR
resetn => reg_arr[12][2].ACLR
resetn => reg_arr[12][3].ACLR
resetn => reg_arr[12][4].ACLR
resetn => reg_arr[12][5].ACLR
resetn => reg_arr[12][6].ACLR
resetn => reg_arr[12][7].ACLR
resetn => reg_arr[11][0].ACLR
resetn => reg_arr[11][1].ACLR
resetn => reg_arr[11][2].ACLR
resetn => reg_arr[11][3].ACLR
resetn => reg_arr[11][4].ACLR
resetn => reg_arr[11][5].ACLR
resetn => reg_arr[11][6].ACLR
resetn => reg_arr[11][7].ACLR
resetn => reg_arr[10][0].ACLR
resetn => reg_arr[10][1].ACLR
resetn => reg_arr[10][2].ACLR
resetn => reg_arr[10][3].ACLR
resetn => reg_arr[10][4].ACLR
resetn => reg_arr[10][5].ACLR
resetn => reg_arr[10][6].ACLR
resetn => reg_arr[10][7].ACLR
resetn => reg_arr[9][0].ACLR
resetn => reg_arr[9][1].ACLR
resetn => reg_arr[9][2].ACLR
resetn => reg_arr[9][3].ACLR
resetn => reg_arr[9][4].ACLR
resetn => reg_arr[9][5].ACLR
resetn => reg_arr[9][6].ACLR
resetn => reg_arr[9][7].ACLR
resetn => reg_arr[8][0].ACLR
resetn => reg_arr[8][1].ACLR
resetn => reg_arr[8][2].ACLR
resetn => reg_arr[8][3].ACLR
resetn => reg_arr[8][4].ACLR
resetn => reg_arr[8][5].ACLR
resetn => reg_arr[8][6].ACLR
resetn => reg_arr[8][7].ACLR
resetn => reg_arr[7][0].ACLR
resetn => reg_arr[7][1].ACLR
resetn => reg_arr[7][2].ACLR
resetn => reg_arr[7][3].ACLR
resetn => reg_arr[7][4].ACLR
resetn => reg_arr[7][5].ACLR
resetn => reg_arr[7][6].ACLR
resetn => reg_arr[7][7].ACLR
resetn => reg_arr[6][0].ACLR
resetn => reg_arr[6][1].ACLR
resetn => reg_arr[6][2].ACLR
resetn => reg_arr[6][3].ACLR
resetn => reg_arr[6][4].ACLR
resetn => reg_arr[6][5].ACLR
resetn => reg_arr[6][6].ACLR
resetn => reg_arr[6][7].ACLR
resetn => reg_arr[5][0].ACLR
resetn => reg_arr[5][1].ACLR
resetn => reg_arr[5][2].ACLR
resetn => reg_arr[5][3].ACLR
resetn => reg_arr[5][4].ACLR
resetn => reg_arr[5][5].ACLR
resetn => reg_arr[5][6].ACLR
resetn => reg_arr[5][7].ACLR
resetn => reg_arr[4][0].ACLR
resetn => reg_arr[4][1].ACLR
resetn => reg_arr[4][2].ACLR
resetn => reg_arr[4][3].ACLR
resetn => reg_arr[4][4].ACLR
resetn => reg_arr[4][5].ACLR
resetn => reg_arr[4][6].ACLR
resetn => reg_arr[4][7].ACLR
resetn => reg_arr[3][0].ACLR
resetn => reg_arr[3][1].ACLR
resetn => reg_arr[3][2].ACLR
resetn => reg_arr[3][3].ACLR
resetn => reg_arr[3][4].ACLR
resetn => reg_arr[3][5].ACLR
resetn => reg_arr[3][6].ACLR
resetn => reg_arr[3][7].ACLR
resetn => reg_arr[2][0].ACLR
resetn => reg_arr[2][1].ACLR
resetn => reg_arr[2][2].ACLR
resetn => reg_arr[2][3].ACLR
resetn => reg_arr[2][4].ACLR
resetn => reg_arr[2][5].ACLR
resetn => reg_arr[2][6].ACLR
resetn => reg_arr[2][7].ACLR
resetn => reg_arr[1][0].ACLR
resetn => reg_arr[1][1].ACLR
resetn => reg_arr[1][2].ACLR
resetn => reg_arr[1][3].ACLR
resetn => reg_arr[1][4].ACLR
resetn => reg_arr[1][5].ACLR
resetn => reg_arr[1][6].ACLR
resetn => reg_arr[1][7].ACLR
resetn => reg_arr[0][0].ACLR
resetn => reg_arr[0][1].ACLR
resetn => reg_arr[0][2].ACLR
resetn => reg_arr[0][3].ACLR
resetn => reg_arr[0][4].ACLR
resetn => reg_arr[0][5].ACLR
resetn => reg_arr[0][6].ACLR
resetn => reg_arr[0][7].ACLR
non_signed => reg_arr.DATAB
a_addr[0] => Mux0.IN4
a_addr[0] => Mux1.IN4
a_addr[0] => Mux2.IN4
a_addr[0] => Mux3.IN4
a_addr[0] => Mux4.IN4
a_addr[0] => Mux5.IN4
a_addr[0] => Mux6.IN4
a_addr[0] => Mux7.IN4
a_addr[1] => Mux0.IN3
a_addr[1] => Mux1.IN3
a_addr[1] => Mux2.IN3
a_addr[1] => Mux3.IN3
a_addr[1] => Mux4.IN3
a_addr[1] => Mux5.IN3
a_addr[1] => Mux6.IN3
a_addr[1] => Mux7.IN3
a_addr[2] => Mux0.IN2
a_addr[2] => Mux1.IN2
a_addr[2] => Mux2.IN2
a_addr[2] => Mux3.IN2
a_addr[2] => Mux4.IN2
a_addr[2] => Mux5.IN2
a_addr[2] => Mux6.IN2
a_addr[2] => Mux7.IN2
a_addr[3] => Mux0.IN1
a_addr[3] => Mux1.IN1
a_addr[3] => Mux2.IN1
a_addr[3] => Mux3.IN1
a_addr[3] => Mux4.IN1
a_addr[3] => Mux5.IN1
a_addr[3] => Mux6.IN1
a_addr[3] => Mux7.IN1
a_addr[4] => Mux0.IN0
a_addr[4] => Mux1.IN0
a_addr[4] => Mux2.IN0
a_addr[4] => Mux3.IN0
a_addr[4] => Mux4.IN0
a_addr[4] => Mux5.IN0
a_addr[4] => Mux6.IN0
a_addr[4] => Mux7.IN0
a_data_out[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
a_data_out[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
a_data_out[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
a_data_out[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
a_data_out[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
a_data_out[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
a_data_out[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
a_data_out[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
b_addr[0] => Mux8.IN4
b_addr[0] => Mux9.IN4
b_addr[0] => Mux10.IN4
b_addr[0] => Mux11.IN4
b_addr[0] => Mux12.IN4
b_addr[0] => Mux13.IN4
b_addr[0] => Mux14.IN4
b_addr[0] => Mux15.IN4
b_addr[0] => Decoder0.IN4
b_addr[1] => Mux8.IN3
b_addr[1] => Mux9.IN3
b_addr[1] => Mux10.IN3
b_addr[1] => Mux11.IN3
b_addr[1] => Mux12.IN3
b_addr[1] => Mux13.IN3
b_addr[1] => Mux14.IN3
b_addr[1] => Mux15.IN3
b_addr[1] => Decoder0.IN3
b_addr[2] => Mux8.IN2
b_addr[2] => Mux9.IN2
b_addr[2] => Mux10.IN2
b_addr[2] => Mux11.IN2
b_addr[2] => Mux12.IN2
b_addr[2] => Mux13.IN2
b_addr[2] => Mux14.IN2
b_addr[2] => Mux15.IN2
b_addr[2] => Decoder0.IN2
b_addr[3] => Mux8.IN1
b_addr[3] => Mux9.IN1
b_addr[3] => Mux10.IN1
b_addr[3] => Mux11.IN1
b_addr[3] => Mux12.IN1
b_addr[3] => Mux13.IN1
b_addr[3] => Mux14.IN1
b_addr[3] => Mux15.IN1
b_addr[3] => Decoder0.IN1
b_addr[4] => Mux8.IN0
b_addr[4] => Mux9.IN0
b_addr[4] => Mux10.IN0
b_addr[4] => Mux11.IN0
b_addr[4] => Mux12.IN0
b_addr[4] => Mux13.IN0
b_addr[4] => Mux14.IN0
b_addr[4] => Mux15.IN0
b_addr[4] => Decoder0.IN0
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[0] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[1] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[2] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[3] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[4] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[5] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[6] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_data_in[7] => reg_arr.DATAB
b_wr_enable => always0.IN1
b_data_out[0] <= Mux15.DB_MAX_OUTPUT_PORT_TYPE
b_data_out[1] <= Mux14.DB_MAX_OUTPUT_PORT_TYPE
b_data_out[2] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
b_data_out[3] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
b_data_out[4] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
b_data_out[5] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
b_data_out[6] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
b_data_out[7] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
flag_inputs[0] => reg_arr.OUTPUTSELECT
flag_inputs[1] => reg_arr.OUTPUTSELECT
flag_inputs[2] => reg_arr.OUTPUTSELECT
flag_inputs[3] => reg_arr.OUTPUTSELECT
flag_inputs[4] => reg_arr.OUTPUTSELECT
flag_inputs[5] => reg_arr.OUTPUTSELECT
flag_inputs[6] => reg_arr.OUTPUTSELECT
flag_inputs[7] => ~NO_FANOUT~
is_atc => atc_out.OUTPUTSELECT
is_atc => always0.IN1
atc_bit[0] => Mux16.IN2
atc_bit[0] => Decoder1.IN2
atc_bit[1] => Mux16.IN1
atc_bit[1] => Decoder1.IN1
atc_bit[2] => Mux16.IN0
atc_bit[2] => Decoder1.IN0
atc_out <= atc_out.DB_MAX_OUTPUT_PORT_TYPE
reg_din[0] => reg_arr[28][0].DATAIN
reg_din[1] => reg_arr[28][1].DATAIN
reg_din[2] => reg_arr[28][2].DATAIN
reg_din[3] => reg_arr[28][3].DATAIN
reg_din[4] => reg_arr[28][4].DATAIN
reg_din[5] => reg_arr[28][5].DATAIN
reg_din[6] => reg_arr[28][6].DATAIN
reg_din[7] => reg_arr[28][7].DATAIN
reg_gout[0] <= reg_arr[29][0].DB_MAX_OUTPUT_PORT_TYPE
reg_gout[1] <= reg_arr[29][1].DB_MAX_OUTPUT_PORT_TYPE
reg_gout[2] <= reg_arr[29][2].DB_MAX_OUTPUT_PORT_TYPE
reg_gout[3] <= reg_arr[29][3].DB_MAX_OUTPUT_PORT_TYPE
reg_gout[4] <= reg_arr[29][4].DB_MAX_OUTPUT_PORT_TYPE
reg_gout[5] <= reg_arr[29][5].DB_MAX_OUTPUT_PORT_TYPE
reg_gout[6] <= reg_arr[29][6].DB_MAX_OUTPUT_PORT_TYPE
reg_gout[7] <= reg_arr[29][7].DB_MAX_OUTPUT_PORT_TYPE
reg_dout[0] <= reg_arr[30][0].DB_MAX_OUTPUT_PORT_TYPE
reg_dout[1] <= reg_arr[30][1].DB_MAX_OUTPUT_PORT_TYPE
reg_dout[2] <= reg_arr[30][2].DB_MAX_OUTPUT_PORT_TYPE
reg_dout[3] <= reg_arr[30][3].DB_MAX_OUTPUT_PORT_TYPE
reg_dout[4] <= reg_arr[30][4].DB_MAX_OUTPUT_PORT_TYPE
reg_dout[5] <= reg_arr[30][5].DB_MAX_OUTPUT_PORT_TYPE
reg_dout[6] <= reg_arr[30][6].DB_MAX_OUTPUT_PORT_TYPE
reg_dout[7] <= reg_arr[30][7].DB_MAX_OUTPUT_PORT_TYPE
reg_flag[0] <= reg_arr[31][0].DB_MAX_OUTPUT_PORT_TYPE
reg_flag[1] <= reg_arr[31][1].DB_MAX_OUTPUT_PORT_TYPE
reg_flag[2] <= reg_arr[31][2].DB_MAX_OUTPUT_PORT_TYPE
reg_flag[3] <= reg_arr[31][3].DB_MAX_OUTPUT_PORT_TYPE
reg_flag[4] <= reg_arr[31][4].DB_MAX_OUTPUT_PORT_TYPE
reg_flag[5] <= reg_arr[31][5].DB_MAX_OUTPUT_PORT_TYPE
reg_flag[6] <= reg_arr[31][6].DB_MAX_OUTPUT_PORT_TYPE
reg_flag[7] <= reg_arr[31][7].DB_MAX_OUTPUT_PORT_TYPE


|top|soc:system_on_chip|cpu:core|instruction_pointer:instruct
clk => instruction_pointer[0]~reg0.CLK
clk => instruction_pointer[1]~reg0.CLK
clk => instruction_pointer[2]~reg0.CLK
clk => instruction_pointer[3]~reg0.CLK
clk => instruction_pointer[4]~reg0.CLK
clk => instruction_pointer[5]~reg0.CLK
clk => instruction_pointer[6]~reg0.CLK
clk => instruction_pointer[7]~reg0.CLK
resetn => instruction_pointer[0]~reg0.ACLR
resetn => instruction_pointer[1]~reg0.ACLR
resetn => instruction_pointer[2]~reg0.ACLR
resetn => instruction_pointer[3]~reg0.ACLR
resetn => instruction_pointer[4]~reg0.ACLR
resetn => instruction_pointer[5]~reg0.ACLR
resetn => instruction_pointer[6]~reg0.ACLR
resetn => instruction_pointer[7]~reg0.ACLR
enable => always0.IN0
enable => always0.IN0
enable => instruction_pointer.OUTPUTSELECT
enable => instruction_pointer.OUTPUTSELECT
enable => instruction_pointer.OUTPUTSELECT
enable => instruction_pointer.OUTPUTSELECT
enable => instruction_pointer.OUTPUTSELECT
enable => instruction_pointer.OUTPUTSELECT
enable => instruction_pointer.OUTPUTSELECT
enable => instruction_pointer.OUTPUTSELECT
alu_result => always0.IN1
branch_select => always0.IN1
atc_out => always0.IN1
non_signed => ~NO_FANOUT~
dval => always0.IN0
gpi[0] => ~NO_FANOUT~
gpi[1] => ~NO_FANOUT~
gpi[2] => ~NO_FANOUT~
gpi[3] => ~NO_FANOUT~
gpi_hold => always0.IN1
address[0] => instruction_pointer.DATAB
address[0] => instruction_pointer.DATAB
address[1] => instruction_pointer.DATAB
address[1] => instruction_pointer.DATAB
address[2] => instruction_pointer.DATAB
address[2] => instruction_pointer.DATAB
address[3] => instruction_pointer.DATAB
address[3] => instruction_pointer.DATAB
address[4] => instruction_pointer.DATAB
address[4] => instruction_pointer.DATAB
address[5] => instruction_pointer.DATAB
address[5] => instruction_pointer.DATAB
address[6] => instruction_pointer.DATAB
address[6] => instruction_pointer.DATAB
address[7] => instruction_pointer.DATAB
address[7] => instruction_pointer.DATAB
instruction_pointer[0] <= instruction_pointer[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
instruction_pointer[1] <= instruction_pointer[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
instruction_pointer[2] <= instruction_pointer[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
instruction_pointer[3] <= instruction_pointer[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
instruction_pointer[4] <= instruction_pointer[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
instruction_pointer[5] <= instruction_pointer[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
instruction_pointer[6] <= instruction_pointer[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
instruction_pointer[7] <= instruction_pointer[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|disp_decimal:dec
value[0] => comb.DATAA
value[0] => Add0.IN9
value[1] => comb.DATAA
value[1] => Add0.IN8
value[2] => comb.DATAA
value[2] => Add0.IN7
value[3] => comb.DATAA
value[3] => Add0.IN6
value[4] => comb.DATAA
value[4] => Add0.IN5
value[5] => comb.DATAA
value[5] => Add0.IN4
value[6] => comb.DATAA
value[6] => Add0.IN3
value[7] => comb.IN0
value[7] => comb.DATAA
value[7] => Add0.IN2
enable => enable.IN1
non_signed => comb.IN1
disp_dec0[0] <= snum_to_sseg:digit0.segs
disp_dec0[1] <= snum_to_sseg:digit0.segs
disp_dec0[2] <= snum_to_sseg:digit0.segs
disp_dec0[3] <= snum_to_sseg:digit0.segs
disp_dec0[4] <= snum_to_sseg:digit0.segs
disp_dec0[5] <= snum_to_sseg:digit0.segs
disp_dec0[6] <= snum_to_sseg:digit0.segs
disp_dec1[0] <= snum_to_sseg:digit1.segs
disp_dec1[1] <= snum_to_sseg:digit1.segs
disp_dec1[2] <= snum_to_sseg:digit1.segs
disp_dec1[3] <= snum_to_sseg:digit1.segs
disp_dec1[4] <= snum_to_sseg:digit1.segs
disp_dec1[5] <= snum_to_sseg:digit1.segs
disp_dec1[6] <= snum_to_sseg:digit1.segs
disp_dec2[0] <= snum_to_sseg:digit2.segs
disp_dec2[1] <= snum_to_sseg:digit2.segs
disp_dec2[2] <= snum_to_sseg:digit2.segs
disp_dec2[3] <= snum_to_sseg:digit2.segs
disp_dec2[4] <= snum_to_sseg:digit2.segs
disp_dec2[5] <= snum_to_sseg:digit2.segs
disp_dec2[6] <= snum_to_sseg:digit2.segs
disp_dec3[0] <= snum_to_sseg:digit3.segs
disp_dec3[1] <= snum_to_sseg:digit3.segs
disp_dec3[2] <= snum_to_sseg:digit3.segs
disp_dec3[3] <= snum_to_sseg:digit3.segs
disp_dec3[4] <= snum_to_sseg:digit3.segs
disp_dec3[5] <= snum_to_sseg:digit3.segs
disp_dec3[6] <= snum_to_sseg:digit3.segs


|top|disp_decimal:dec|snum_to_sseg:digit0
x[0] => Mod0.IN11
x[0] => WideNor0.IN0
x[0] => LessThan0.IN16
x[0] => Div0.IN11
x[1] => Mod0.IN10
x[1] => WideNor0.IN1
x[1] => LessThan0.IN15
x[1] => Div0.IN10
x[2] => Mod0.IN9
x[2] => WideNor0.IN2
x[2] => LessThan0.IN14
x[2] => Div0.IN9
x[3] => Mod0.IN8
x[3] => WideNor0.IN3
x[3] => LessThan0.IN13
x[3] => Div0.IN8
x[4] => Mod0.IN7
x[4] => WideNor0.IN4
x[4] => LessThan0.IN12
x[4] => Div0.IN7
x[5] => Mod0.IN6
x[5] => WideNor0.IN5
x[5] => LessThan0.IN11
x[5] => Div0.IN6
x[6] => Mod0.IN5
x[6] => WideNor0.IN6
x[6] => LessThan0.IN10
x[6] => Div0.IN5
x[7] => Mod0.IN4
x[7] => WideNor0.IN7
x[7] => LessThan0.IN9
x[7] => Div0.IN4
neg => comb.IN1
neg => eno.IN0
neg => eno.IN1
enable_in => enable_in.IN1
xo[0] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[1] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[2] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[3] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[4] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[5] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[6] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[7] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
eno <= eno.DB_MAX_OUTPUT_PORT_TYPE
segs[0] <= SSeg:converter.segs
segs[1] <= SSeg:converter.segs
segs[2] <= SSeg:converter.segs
segs[3] <= SSeg:converter.segs
segs[4] <= SSeg:converter.segs
segs[5] <= SSeg:converter.segs
segs[6] <= SSeg:converter.segs


|top|disp_decimal:dec|snum_to_sseg:digit0|SSeg:converter
bin[0] => Decoder0.IN3
bin[1] => Decoder0.IN2
bin[2] => Decoder0.IN1
bin[3] => Decoder0.IN0
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
segs[0] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[1] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[2] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[3] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[4] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[5] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[6] <= segs.DB_MAX_OUTPUT_PORT_TYPE


|top|disp_decimal:dec|snum_to_sseg:digit1
x[0] => Mod0.IN11
x[0] => WideNor0.IN0
x[0] => LessThan0.IN16
x[0] => Div0.IN11
x[1] => Mod0.IN10
x[1] => WideNor0.IN1
x[1] => LessThan0.IN15
x[1] => Div0.IN10
x[2] => Mod0.IN9
x[2] => WideNor0.IN2
x[2] => LessThan0.IN14
x[2] => Div0.IN9
x[3] => Mod0.IN8
x[3] => WideNor0.IN3
x[3] => LessThan0.IN13
x[3] => Div0.IN8
x[4] => Mod0.IN7
x[4] => WideNor0.IN4
x[4] => LessThan0.IN12
x[4] => Div0.IN7
x[5] => Mod0.IN6
x[5] => WideNor0.IN5
x[5] => LessThan0.IN11
x[5] => Div0.IN6
x[6] => Mod0.IN5
x[6] => WideNor0.IN6
x[6] => LessThan0.IN10
x[6] => Div0.IN5
x[7] => Mod0.IN4
x[7] => WideNor0.IN7
x[7] => LessThan0.IN9
x[7] => Div0.IN4
neg => comb.IN1
neg => eno.IN0
neg => eno.IN1
enable_in => enable_in.IN1
xo[0] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[1] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[2] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[3] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[4] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[5] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[6] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[7] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
eno <= eno.DB_MAX_OUTPUT_PORT_TYPE
segs[0] <= SSeg:converter.segs
segs[1] <= SSeg:converter.segs
segs[2] <= SSeg:converter.segs
segs[3] <= SSeg:converter.segs
segs[4] <= SSeg:converter.segs
segs[5] <= SSeg:converter.segs
segs[6] <= SSeg:converter.segs


|top|disp_decimal:dec|snum_to_sseg:digit1|SSeg:converter
bin[0] => Decoder0.IN3
bin[1] => Decoder0.IN2
bin[2] => Decoder0.IN1
bin[3] => Decoder0.IN0
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
segs[0] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[1] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[2] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[3] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[4] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[5] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[6] <= segs.DB_MAX_OUTPUT_PORT_TYPE


|top|disp_decimal:dec|snum_to_sseg:digit2
x[0] => Mod0.IN11
x[0] => WideNor0.IN0
x[0] => LessThan0.IN16
x[0] => Div0.IN11
x[1] => Mod0.IN10
x[1] => WideNor0.IN1
x[1] => LessThan0.IN15
x[1] => Div0.IN10
x[2] => Mod0.IN9
x[2] => WideNor0.IN2
x[2] => LessThan0.IN14
x[2] => Div0.IN9
x[3] => Mod0.IN8
x[3] => WideNor0.IN3
x[3] => LessThan0.IN13
x[3] => Div0.IN8
x[4] => Mod0.IN7
x[4] => WideNor0.IN4
x[4] => LessThan0.IN12
x[4] => Div0.IN7
x[5] => Mod0.IN6
x[5] => WideNor0.IN5
x[5] => LessThan0.IN11
x[5] => Div0.IN6
x[6] => Mod0.IN5
x[6] => WideNor0.IN6
x[6] => LessThan0.IN10
x[6] => Div0.IN5
x[7] => Mod0.IN4
x[7] => WideNor0.IN7
x[7] => LessThan0.IN9
x[7] => Div0.IN4
neg => comb.IN1
neg => eno.IN0
neg => eno.IN1
enable_in => enable_in.IN1
xo[0] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[1] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[2] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[3] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[4] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[5] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[6] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[7] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
eno <= eno.DB_MAX_OUTPUT_PORT_TYPE
segs[0] <= SSeg:converter.segs
segs[1] <= SSeg:converter.segs
segs[2] <= SSeg:converter.segs
segs[3] <= SSeg:converter.segs
segs[4] <= SSeg:converter.segs
segs[5] <= SSeg:converter.segs
segs[6] <= SSeg:converter.segs


|top|disp_decimal:dec|snum_to_sseg:digit2|SSeg:converter
bin[0] => Decoder0.IN3
bin[1] => Decoder0.IN2
bin[2] => Decoder0.IN1
bin[3] => Decoder0.IN0
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
segs[0] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[1] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[2] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[3] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[4] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[5] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[6] <= segs.DB_MAX_OUTPUT_PORT_TYPE


|top|disp_decimal:dec|snum_to_sseg:digit3
x[0] => Mod0.IN11
x[0] => WideNor0.IN0
x[0] => LessThan0.IN16
x[0] => Div0.IN11
x[1] => Mod0.IN10
x[1] => WideNor0.IN1
x[1] => LessThan0.IN15
x[1] => Div0.IN10
x[2] => Mod0.IN9
x[2] => WideNor0.IN2
x[2] => LessThan0.IN14
x[2] => Div0.IN9
x[3] => Mod0.IN8
x[3] => WideNor0.IN3
x[3] => LessThan0.IN13
x[3] => Div0.IN8
x[4] => Mod0.IN7
x[4] => WideNor0.IN4
x[4] => LessThan0.IN12
x[4] => Div0.IN7
x[5] => Mod0.IN6
x[5] => WideNor0.IN5
x[5] => LessThan0.IN11
x[5] => Div0.IN6
x[6] => Mod0.IN5
x[6] => WideNor0.IN6
x[6] => LessThan0.IN10
x[6] => Div0.IN5
x[7] => Mod0.IN4
x[7] => WideNor0.IN7
x[7] => LessThan0.IN9
x[7] => Div0.IN4
neg => comb.IN1
neg => eno.IN0
neg => eno.IN1
enable_in => enable_in.IN1
xo[0] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[1] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[2] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[3] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[4] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[5] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[6] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
xo[7] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
eno <= eno.DB_MAX_OUTPUT_PORT_TYPE
segs[0] <= SSeg:converter.segs
segs[1] <= SSeg:converter.segs
segs[2] <= SSeg:converter.segs
segs[3] <= SSeg:converter.segs
segs[4] <= SSeg:converter.segs
segs[5] <= SSeg:converter.segs
segs[6] <= SSeg:converter.segs


|top|disp_decimal:dec|snum_to_sseg:digit3|SSeg:converter
bin[0] => Decoder0.IN3
bin[1] => Decoder0.IN2
bin[2] => Decoder0.IN1
bin[3] => Decoder0.IN0
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
segs[0] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[1] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[2] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[3] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[4] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[5] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[6] <= segs.DB_MAX_OUTPUT_PORT_TYPE


|top|disp_hex:hex
instruct_pointer[0] => instruct_pointer[0].IN1
instruct_pointer[1] => instruct_pointer[1].IN1
instruct_pointer[2] => instruct_pointer[2].IN1
instruct_pointer[3] => instruct_pointer[3].IN1
instruct_pointer[4] => instruct_pointer[4].IN1
instruct_pointer[5] => instruct_pointer[5].IN1
instruct_pointer[6] => instruct_pointer[6].IN1
instruct_pointer[7] => instruct_pointer[7].IN1
disp_hex0[0] <= SSeg:hex_dig0.segs
disp_hex0[1] <= SSeg:hex_dig0.segs
disp_hex0[2] <= SSeg:hex_dig0.segs
disp_hex0[3] <= SSeg:hex_dig0.segs
disp_hex0[4] <= SSeg:hex_dig0.segs
disp_hex0[5] <= SSeg:hex_dig0.segs
disp_hex0[6] <= SSeg:hex_dig0.segs
disp_hex1[0] <= SSeg:hex_dig1.segs
disp_hex1[1] <= SSeg:hex_dig1.segs
disp_hex1[2] <= SSeg:hex_dig1.segs
disp_hex1[3] <= SSeg:hex_dig1.segs
disp_hex1[4] <= SSeg:hex_dig1.segs
disp_hex1[5] <= SSeg:hex_dig1.segs
disp_hex1[6] <= SSeg:hex_dig1.segs


|top|disp_hex:hex|SSeg:hex_dig0
bin[0] => Decoder0.IN3
bin[1] => Decoder0.IN2
bin[2] => Decoder0.IN1
bin[3] => Decoder0.IN0
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
segs[0] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[1] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[2] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[3] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[4] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[5] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[6] <= segs.DB_MAX_OUTPUT_PORT_TYPE


|top|disp_hex:hex|SSeg:hex_dig1
bin[0] => Decoder0.IN3
bin[1] => Decoder0.IN2
bin[2] => Decoder0.IN1
bin[3] => Decoder0.IN0
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
neg => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
enable => segs.OUTPUTSELECT
segs[0] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[1] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[2] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[3] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[4] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[5] <= segs.DB_MAX_OUTPUT_PORT_TYPE
segs[6] <= segs.DB_MAX_OUTPUT_PORT_TYPE


